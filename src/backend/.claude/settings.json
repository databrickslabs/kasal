{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Edit|MultiEdit|Write",
        "hooks": [
          {
            "type": "command",
            "command": "bash -c 'if [[ \"${tool_params_file_path}\" == *.py ]]; then echo \"\\nüîç Running flake8 on ${tool_params_file_path}...\"; flake8 \"${tool_params_file_path}\" --max-line-length=120 --extend-ignore=W293,W291,W292 || echo \"‚ö†Ô∏è  Flake8 found issues in ${tool_params_file_path}\"; elif [[ \"${tool_params_file_path}\" == *.ts || \"${tool_params_file_path}\" == *.tsx ]]; then echo \"\\nüîç Running ESLint on ${tool_params_file_path}...\"; cd ../../src/frontend && npx eslint --no-error-on-unmatched-pattern \"${tool_params_file_path}\" || echo \"‚ö†Ô∏è  ESLint found issues in ${tool_params_file_path}\"; fi'",
            "description": "Run linters on files after editing (flake8 for Python, ESLint for TypeScript)"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "matcher": ".*flake8.*|.*lint.*|.*test.*",
        "hooks": [
          {
            "type": "command",
            "command": "echo \"üí° Linting tips:\\n\\nPython (Backend):\\n  ‚Ä¢ flake8 src/ --count --statistics\\n  ‚Ä¢ flake8 <file> --max-line-length=120\\n  ‚Ä¢ Auto-fix: autopep8 or black\\n\\nTypeScript (Frontend):\\n  ‚Ä¢ npm run lint (from frontend dir)\\n  ‚Ä¢ npx eslint src/ --fix (auto-fix)\\n  ‚Ä¢ npm run tsc (type checking)\"",
            "description": "Show linting tips for both Python and TypeScript"
          }
        ]
      }
    ]
  }
}