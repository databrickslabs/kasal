"""add chat history table

Revision ID: ddfd70895919
Revises: a2521320b527
Create Date: 2025-06-10 15:22:49.470441

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ddfd70895919'
down_revision: Union[str, None] = 'a2521320b527'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tenant_users')
    op.drop_index('ix_documentation_embeddings_id', table_name='documentation_embeddings')
    op.drop_index('ix_documentation_embeddings_source', table_name='documentation_embeddings')
    op.drop_index('ix_documentation_embeddings_title', table_name='documentation_embeddings')
    op.drop_table('documentation_embeddings')
    op.drop_table('tenants')
    op.create_index('idx_execution_logs_group_exec_id', 'execution_logs', ['group_id', 'execution_id'], unique=False)
    op.create_index('idx_execution_logs_group_timestamp', 'execution_logs', ['group_id', 'timestamp'], unique=False)
    op.drop_index('ix_llmlog_group_email', table_name='llmlog')
    op.drop_index('ix_schedule_tenant_id', table_name='schedule')
    op.drop_column('schedule', 'tenant_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('schedule', sa.Column('tenant_id', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.create_index('ix_schedule_tenant_id', 'schedule', ['tenant_id'], unique=False)
    op.create_index('ix_llmlog_group_email', 'llmlog', ['group_email'], unique=False)
    op.drop_index('idx_execution_logs_group_timestamp', table_name='execution_logs')
    op.drop_index('idx_execution_logs_group_exec_id', table_name='execution_logs')
    op.create_table('tenants',
    sa.Column('id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email_domain', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('auto_created', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_by_email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tenants_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('documentation_embeddings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=False),
    sa.Column('doc_metadata', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='documentation_embeddings_pkey')
    )
    op.create_index('ix_documentation_embeddings_title', 'documentation_embeddings', ['title'], unique=False)
    op.create_index('ix_documentation_embeddings_source', 'documentation_embeddings', ['source'], unique=False)
    op.create_index('ix_documentation_embeddings_id', 'documentation_embeddings', ['id'], unique=False)
    op.create_table('tenant_users',
    sa.Column('id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('tenant_id', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('joined_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('auto_created', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name='tenant_users_tenant_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='tenant_users_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tenant_users_pkey')
    )
    # ### end Alembic commands ### 